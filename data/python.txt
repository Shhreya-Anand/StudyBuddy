CS 201 Introduction to Programming with Python: SYLLABUS Instructor: Anatoliy Aleksandrov, Ph.D.
Email: aaleksan@bu.edu Phone: 617-489-9061
Course Description
Introduction to programming basics (what it is and how it works), binary computation, problem-solving methods and algorithm development. Includes procedural and data abstractions, program design, debugging, testing, and documentation. Covers data types, control structures, functions, parameter passing, library functions, arrays, inheritance and object oriented design. Laboratory exercises in Python.
Course Objectives and Learning Goals
The students should be able to
 Understand basic principles of computers
 Understand basics of binary computation
 Understand the programming basics (operations, control structures, data types, etc.)
 Readily use the Python programming language
 Apply various data types and control structure
 Understand class inheritance and polymorphism
 Understand the object-oriented program design and development
 Understand and begin to implement code
Resources
Contemporary programming languages like Python enjoy rich online documentation. Indeed, they are built on the premise that programmers are continually in contact with such documentation, and are not expected to memorize any but a small fraction of it. The textbook for the course is below.
"Starting Out with Python plus MyProgrammingLab with Pearson eText --Access Card Package (3rd Edition) Tony Gaddis ISBN-13: 978-0133862256"
Week-by-Week Topics
Weekly Activities
Each week you will need to:
 Attend the lectures
 Read recommended pages in the textbook (listed below)
 Complete the interim assessment for feedback
 Complete the homework assignments

 Participate in discussions Schedule:

  Week Module Topic
Readings
 1 and 2
  1
Module 1: Introduction
-- Relationship between computers and programs -- Basic principles of computers
-- File systems
-- Using the Python interpreter
-- Introduction to binary computation
-- Input / Output
   Chapters 1
 3 and 4
  2
Module 2: Data types and control structures
-- Operators (unary, arithmetic, etc.)
-- Data types, variables, expressions, and statements -- Assignment statements
-- Strings and string operations
-- Control Structures: loops and decision
   Chapter 2, 3.1, 3.2, 3.4, 3.5, 3.6, 4.1, 4.2, 4.3
  5 and 6
  3
Module 3: Modularization and Classes -- Standard modules
-- Packages
-- Defining Classes
-- Defining functions
-- Functions and arguments (signature)
  Chapter 5.1 – 5.5
 7 and 8
  4
Module 4: Exceptions and data structures -- Data Structures (array, List, Dictionary) -- Error processing
-- Exception Raising and Handling
   Chapter 6, 9.1, 9.2
  9 and 10
  5
Module 5: Object oriented design -- Programming types
-- Object Oriented Programming -- Object Oriented Design
-- Inheritance and Polymorphism
  Chapter 10, 11
       Remaining 6 Module 6: Remaining materials, Exam preparation.
GRADING:
Programming assignments/Homework - 40% Class Participation and Attendance - 10% Midterm - 25%
Final - 25%
PROGRAM EVALUATION CRITERIA Program correctness - 60% Documentation - 20%
Readability - 20%
Remaining materials, Q&A
